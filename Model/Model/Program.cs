using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Timers;
using System.Diagnostics;
using System.Threading;
using System.Collections;
using System.Reflection;
using System.ComponentModel;
using System.Data;
using System.Runtime.InteropServices;
using System.IO;
using System.Xml;
namespace Model
{
    [assembly: AssemblyKeyFile("SimModel.snk")]
    [Guid("FDE2C8D0-E950-2654-9AE9-516221AFAC31")]
    [InterfaceType(ComInterfaceType.InterfaceIsIDispatch)]
    [ComVisible(true)]
    public interface IModel
    {
        [DispId(1)]
        String Name
        {
            get;
            set;
        }
        [DispId(2)]
        System.Object Broker
        {
            get;
            set;
        }
        [DispId(3)]
        System.Object Get_Broker();
        [DispId(4)]
        string Get_Name();
        [DispId(5)]
        void Set_Broker(System.Object Value);
        [DispId(6)]
        void Set_Name(string Value);
        [DispId(7)]
        void Configurate(string Config);
        [DispId(8)]
        void ProcessMessage(string SenderName, string MessageText, System.Object OleVariant);
        [DispId(9)]
        void Stop();
    }
    [Guid("CBAEA8CE-0FA0-2324-97BA-5E204DD791F9")]
    [ClassInterface(ClassInterfaceType.None)]
    [ComVisible(true)]
    public class ATModel : IModel
    {
        static Пострадавший Пострадавший_1;
        static Пострадавший Пострадавший_2;
        static ДТП ДТП_1;
        static Машина Машина_1;
        static Машина Машина_2;
        static ЛПУ ЛПУ_1;
        static ЛПУ ЛПУ_2;
        static int Номер_текущего_такта = 0;
        System.Object m_broker;
        string m_name;
        public string Name
        {
            get
            {
                using (StreamWriter sw = File.AppendText("Log.txt"))
                {
                    sw.WriteLine("get Name");
                }
                return m_name;
            }
            set
            {
                using (StreamWriter sw = File.AppendText("Log.txt"))
                {
                    sw.WriteLine("set Name" + value);
                }
                m_name = value;
            }
        }
        public System.Object Broker
        {
            get
            {
                using (StreamWriter sw = File.AppendText("Log.txt"))
                {
                    sw.WriteLine("get broker");
                }
                return m_broker;
            }
            set
            {
                using (StreamWriter sw = File.AppendText("Log.txt"))
                {
                    sw.WriteLine("1set broker" + value);
                }
                m_broker = value;
                using (StreamWriter sw = File.AppendText("Log.txt"))
                {
                    sw.WriteLine("2set broker" + m_broker.ToString());
                }
            }
        }
        public System.Object Get_Broker()
        {
            using (StreamWriter sw = File.AppendText("Log.txt"))
            {
                sw.WriteLine("get broker wrong");
            }
            return Broker;
        }
        public string Get_Name()
        {
            using (StreamWriter sw = File.AppendText("Log.txt"))
            {
                sw.WriteLine("get Name wrong");
            }
            return Name;
        }
        public void Set_Broker(System.Object Value)
        {
            using (StreamWriter sw = File.AppendText("Log.txt"))
            {
                sw.WriteLine("set broker wrong");
            }
            Broker = Value;
        }
        public void Set_Name(string Value)
        {
            using (StreamWriter sw = File.AppendText("Log.txt"))
            {
                sw.WriteLine("set name wrong");
            }
            Name = Value;
        }
        public void Configurate(string Config) { }
        public void ProcessMessage(string SenderName, string MessageText, System.Object OleVariant)
        {
            Номер_текущего_такта = Номер_текущего_такта + 1;
            if (Номер_текущего_такта == 1)
            {
                Пострадавший_1 = new Пострадавший();
                Пострадавший_1.Приоритет_пострадавшего = 1;
                Пострадавший_1.Состояние = 1;
                Пострадавший_1.Степень_тяжести = Пострадавший.Enum_Степень_тяжести.Легкая;
                Пострадавший_1.Тип_травмы = Пострадавший.Enum_Тип_травмы.Хирургия;
                Пострадавший_2 = new Пострадавший();
                Пострадавший_2.Приоритет_пострадавшего = 1;
                Пострадавший_2.Состояние = 1;
                Пострадавший_2.Степень_тяжести = Пострадавший.Enum_Степень_тяжести.Легкая;
                Пострадавший_2.Тип_травмы = Пострадавший.Enum_Тип_травмы.Хирургия;
                ДТП_1 = new ДТП();
                ДТП_1.Координата_X = Случайное_дробное_число(0, 100);
                ДТП_1.Координата_Y = Случайное_дробное_число(0, 100);
                ДТП_1.Легкий_ожоговый = Случайное_число(0, 3);
                ДТП_1.Легкий_нейрохирургия = Случайное_число(0, 3);
                ДТП_1.Легкий_хирургия = Случайное_число(0, 3);
                ДТП_1.Легкий_реанимация = Случайное_число(0, 3);
                ДТП_1.Легкий = 0;
                ДТП_1.Средний_ожоговый = Случайное_число(0, 3);
                ДТП_1.Средний_нейрохирургия = Случайное_число(0, 3);
                ДТП_1.Средний_хирургия = Случайное_число(0, 3);
                ДТП_1.Средний_реанимация = Случайное_число(0, 3);
                ДТП_1.Средний = 0;
                ДТП_1.Тяжелый_ожоговый = Случайное_число(0, 3);
                ДТП_1.Тяжелый_нейрохирургия = Случайное_число(0, 3);
                ДТП_1.Тяжелый_хирургия = Случайное_число(0, 3);
                ДТП_1.Тяжелый_реанимация = Случайное_число(0, 3);
                ДТП_1.Тяжелый = 0;
                ДТП_1.Очень_тяжелый_ожоговый = Случайное_число(0, 3);
                ДТП_1.Очень_тяжелый_нейрохирургия = Случайное_число(0, 3);
                ДТП_1.Очень_тяжелый_хирургия = Случайное_число(0, 3);
                ДТП_1.Очень_тяжелый_реанимация = Случайное_число(0, 3);
                ДТП_1.Очень_тяжелый = 0;
                ДТП_1.Степень_тяжести_следующего_пострадавшего = ДТП.Enum_Степень_тяжести_следующего_пострадавшего.Легкая;
                ДТП_1.Тип_травмы_следующего_пострадавшего = ДТП.Enum_Тип_травмы_следующего_пострадавшего.Хирургия;
                ДТП_1.Определить_пострадавшего = 1;
                Машина_1 = new Машина();
                Машина_1.Тип_машины = Машина.Enum_Тип_машины.A;
                Машина_1.Тип_бригады = Машина.Enum_Тип_бригады.A;
                Машина_1.Число_типа_машины = Случайное_число(1, 4);
                Машина_1.Число_типа_бригады = Случайное_число(1, 4);
                Машина_1.Координата_X = Случайное_дробное_число(0, 100);
                Машина_1.Координата_Y = Случайное_дробное_число(0, 100);
                Машина_1.Состояние = Машина.Enum_Состояние.Свободна;
                Машина_1.Степень_тяжести_пострадавшего = Машина.Enum_Степень_тяжести_пострадавшего.Легкая;
                Машина_1.Тип_травмы = Машина.Enum_Тип_травмы.Хирургия;
                Машина_1.Координата_X_Цели = -1;
                Машина_1.Координата_Y_Цели = -1;
                Машина_1.Время = -1;
                Машина_1.Координата_X_Вектора_Скорости = 0;
                Машина_1.Координата_Y_Вектора_Скорости = 0;
                Машина_1.Модуль_Вектора_Скорости = 0;
                Машина_2 = new Машина();
                Машина_2.Тип_машины = Машина.Enum_Тип_машины.A;
                Машина_2.Тип_бригады = Машина.Enum_Тип_бригады.A;
                Машина_2.Число_типа_машины = Случайное_число(1, 4);
                Машина_2.Число_типа_бригады = Случайное_число(1, 4);
                Машина_2.Координата_X = Случайное_дробное_число(0, 100);
                Машина_2.Координата_Y = Случайное_дробное_число(0, 100);
                Машина_2.Состояние = Машина.Enum_Состояние.Свободна;
                Машина_2.Степень_тяжести_пострадавшего = Машина.Enum_Степень_тяжести_пострадавшего.Легкая;
                Машина_2.Тип_травмы = Машина.Enum_Тип_травмы.Хирургия;
                Машина_2.Координата_X_Цели = -1;
                Машина_2.Координата_Y_Цели = -1;
                Машина_2.Время = -1;
                Машина_2.Координата_X_Вектора_Скорости = 0;
                Машина_2.Координата_Y_Вектора_Скорости = 0;
                Машина_2.Модуль_Вектора_Скорости = 0;
                ЛПУ_1 = new ЛПУ();
                ЛПУ_1.Координата_X = Случайное_дробное_число(0, 100);
                ЛПУ_1.Координата_Y = Случайное_дробное_число(0, 100);
                ЛПУ_1.Количество_мест_в_нейрохирургии = Случайное_число(0, 100);
                ЛПУ_1.Количество_мест_в_хирургии = Случайное_число(0, 100);
                ЛПУ_1.Количество_мест_в_реанимации = Случайное_число(0, 100);
                ЛПУ_1.Количество_мест_в_ожоговом = Случайное_число(0, 100);
                ЛПУ_2 = new ЛПУ();
                ЛПУ_2.Координата_X = Случайное_дробное_число(0, 100);
                ЛПУ_2.Координата_Y = Случайное_дробное_число(0, 100);
                ЛПУ_2.Количество_мест_в_нейрохирургии = Случайное_число(0, 100);
                ЛПУ_2.Количество_мест_в_хирургии = Случайное_число(0, 100);
                ЛПУ_2.Количество_мест_в_реанимации = Случайное_число(0, 100);
                ЛПУ_2.Количество_мест_в_ожоговом = Случайное_число(0, 100);
                formingOutParam(Номер_текущего_такта.ToString());
                Random rnd = new Random();
                Операция_1_2();
                Операция_1_3();
                Операция_1_4();
                Операция_1_5();
                Операция_1_6();
                Операция_1_7();
                Операция_1_8();
                Операция_1_9();
                Операция_1_10();
                Операция_1_11();
                Операция_1_12();
                Операция_2_2();
                Операция_2_3();
                Операция_2_4();
                Операция_2_5();
                Операция_2_6();
                Операция_2_7();
                Операция_2_8();
                Операция_2_9();
                Операция_2_10();
                Операция_2_11();
                Операция_2_12();
                Операция_3_1();
                Операция_3_2();
                Операция_3_3();
                Операция_3_4();
            }
            else
            {
                formingOutParam(Номер_текущего_такта.ToString());
                Random rnd = new Random();
                Операция_1_2();
                Операция_1_3();
                Операция_1_4();
                Операция_1_5();
                Операция_1_6();
                Операция_1_7();
                Операция_1_8();
                Операция_1_9();
                Операция_1_10();
                Операция_1_11();
                Операция_1_12();
                Операция_2_2();
                Операция_2_3();
                Операция_2_4();
                Операция_2_5();
                Операция_2_6();
                Операция_2_7();
                Операция_2_8();
                Операция_2_9();
                Операция_2_10();
                Операция_2_11();
                Операция_2_12();
                Операция_3_1();
                Операция_3_2();
                Операция_3_3();
                Операция_3_4();
            }
        }
        public void Stop()
        {
            Environment.Exit(0);
        }
        static void Операция_1_2()
        {
            Определение_принадлежности_машины_к_типу_A(Машина_1);
        }
        static void Операция_1_3()
        {
            Определение_принадлежности_машины_к_типу_B(Машина_1);
        }
        static void Операция_1_4()
        {
            Определение_принадлежности_машины_к_типу_C(Машина_1);
        }
        static void Операция_1_5()
        {
            Определение_принадлежности_бригады_машины_к_типу_A(Машина_1);
        }
        static void Операция_1_6()
        {
            Определение_принадлежности_бригады_машины_к_типу_B(Машина_1);
        }
        static void Операция_1_7()
        {
            Определение_принадлежности_бригады_машины_к_типу_C(Машина_1);
        }
        static void Операция_1_8()
        {
            Определение_Смещения_По_Координате_X(Машина_1);
        }
        static void Операция_1_9()
        {
            Определение_Смещения_По_Координате_Y(Машина_1);
        }
        static void Операция_1_10()
        {
            Определение_Модуля_Вектора_Смещения(Машина_1);
        }
        static void Операция_1_11()
        {
            Смещение_Машины_По_Координате_X(Машина_1);
        }
        static void Операция_1_12()
        {
            Смещение_Машины_По_Координате_Y(Машина_1);
        }
        static void Операция_2_2()
        {
            Определение_принадлежности_машины_к_типу_A(Машина_2);
        }
        static void Операция_2_3()
        {
            Определение_принадлежности_машины_к_типу_B(Машина_2);
        }
        static void Операция_2_4()
        {
            Определение_принадлежности_машины_к_типу_C(Машина_2);
        }
        static void Операция_2_5()
        {
            Определение_принадлежности_бригады_машины_к_типу_A(Машина_2);
        }
        static void Операция_2_6()
        {
            Определение_принадлежности_бригады_машины_к_типу_B(Машина_2);
        }
        static void Операция_2_7()
        {
            Определение_принадлежности_бригады_машины_к_типу_C(Машина_2);
        }
        static void Операция_2_8()
        {
            Определение_Смещения_По_Координате_X(Машина_2);
        }
        static void Операция_2_9()
        {
            Определение_Смещения_По_Координате_Y(Машина_2);
        }
        static void Операция_2_10()
        {
            Определение_Модуля_Вектора_Смещения(Машина_2);
        }
        static void Операция_2_11()
        {
            Смещение_Машины_По_Координате_X(Машина_2);
        }
        static void Операция_2_12()
        {
            Смещение_Машины_По_Координате_Y(Машина_2);
        }
        static void Операция_3_1()
        {
            Сумма_легких(ДТП_1);
        }
        static void Операция_3_2()
        {
            Сумма_средних(ДТП_1);
        }
        static void Операция_3_3()
        {
            Сумма_тяжелых(ДТП_1);
        }
        static void Операция_3_4()
        {
            Сумма_очень_тяжелых(ДТП_1);
        }
        private static void Определение_принадлежности_машины_к_типу_A(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Число_типа_машины == 1)
            {
                Текущая_Машина.Тип_машины = Машина.Enum_Тип_машины.A;
            }
        }
        private static void Определение_принадлежности_машины_к_типу_B(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Число_типа_машины == 2)
            {
                Текущая_Машина.Тип_машины = Машина.Enum_Тип_машины.B;
            }
        }
        private static void Определение_принадлежности_машины_к_типу_C(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Число_типа_машины == 3)
            {
                Текущая_Машина.Тип_машины = Машина.Enum_Тип_машины.C;
            }
        }
        private static void Определение_принадлежности_бригады_машины_к_типу_A(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Число_типа_бригады == 1)
            {
                Текущая_Машина.Тип_бригады = Машина.Enum_Тип_бригады.A;
            }
        }
        private static void Определение_принадлежности_бригады_машины_к_типу_B(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Число_типа_бригады == 2)
            {
                Текущая_Машина.Тип_бригады = Машина.Enum_Тип_бригады.B;
            }
        }
        private static void Определение_принадлежности_бригады_машины_к_типу_C(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Число_типа_бригады == 3)
            {
                Текущая_Машина.Тип_бригады = Машина.Enum_Тип_бригады.C;
            }
        }
        private static void Определение_Смещения_По_Координате_X(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Состояние == Машина.Enum_Состояние.Свободна)
            {
                Текущая_Машина.Координата_X_Вектора_Скорости = Случайное_дробное_число(-1, 1);
            }
        }
        private static void Определение_Смещения_По_Координате_Y(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Состояние == Машина.Enum_Состояние.Свободна)
            {
                Текущая_Машина.Координата_Y_Вектора_Скорости = Случайное_дробное_число(-1, 1);
            }
        }
        private static void Определение_Модуля_Вектора_Смещения(Машина Текущая_Машина)
        {
            if (1 == 1)
            {
                Текущая_Машина.Модуль_Вектора_Скорости = Случайное_дробное_число(0, 1);
            }
        }
        private static void Смещение_Машины_По_Координате_X(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Состояние == Машина.Enum_Состояние.Свободна)
            {
                Текущая_Машина.Координата_X = Текущая_Машина.Координата_X + Текущая_Машина.Модуль_Вектора_Скорости * Текущая_Машина.Координата_X_Вектора_Скорости;
            }
        }
        private static void Смещение_Машины_По_Координате_Y(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Состояние == Машина.Enum_Состояние.Свободна)
            {
                Текущая_Машина.Координата_Y = Текущая_Машина.Координата_Y + Текущая_Машина.Модуль_Вектора_Скорости * Текущая_Машина.Координата_Y_Вектора_Скорости;
            }
        }
        private static void Сумма_легких(ДТП Текущее_ДТП)
        {
            if (1 == 1)
            {
                Текущее_ДТП.Легкий = Текущее_ДТП.Легкий_ожоговый + Текущее_ДТП.Легкий_реанимация + Текущее_ДТП.Легкий_хирургия + Текущее_ДТП.Легкий_нейрохирургия;
            }
        }
        private static void Сумма_средних(ДТП Текущее_ДТП)
        {
            if (1 == 1)
            {
                Текущее_ДТП.Средний = Текущее_ДТП.Средний_ожоговый + Текущее_ДТП.Средний_реанимация + Текущее_ДТП.Средний_хирургия + Текущее_ДТП.Средний_нейрохирургия;
            }
        }
        private static void Сумма_тяжелых(ДТП Текущее_ДТП)
        {
            if (1 == 1)
            {
                Текущее_ДТП.Тяжелый = Текущее_ДТП.Тяжелый_ожоговый + Текущее_ДТП.Тяжелый_реанимация + Текущее_ДТП.Тяжелый_хирургия + Текущее_ДТП.Тяжелый_нейрохирургия;
            }
        }
        private static void Сумма_очень_тяжелых(ДТП Текущее_ДТП)
        {
            if (1 == 1)
            {
                Текущее_ДТП.Очень_тяжелый = Текущее_ДТП.Очень_тяжелый_ожоговый + Текущее_ДТП.Очень_тяжелый_реанимация + Текущее_ДТП.Очень_тяжелый_хирургия + Текущее_ДТП.Очень_тяжелый_нейрохирургия;
            }
        }
        private static void Движение_занятой(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Состояние == Машина.Enum_Состояние.Занята)
            {
                Текущая_Машина.Модуль_Вектора_Скорости = Случайное_дробное_число(0.5, 1);
            }
        }
        private static void Движение_везущей(Машина Текущая_Машина)
        {
            if (Текущая_Машина.Состояние == Машина.Enum_Состояние.Везет)
            {
                Текущая_Машина.Модуль_Вектора_Скорости = Случайное_дробное_число(0.5, 1);
            }
        }
        private static void Движение_до_конца_по_X(Машина Текущая_Машина)
        {
            if ((Текущая_Машина.Координата_X_Цели - Текущая_Машина.Координата_X < 0.5) && (Текущая_Машина.Состояние == Машина.Enum_Состояние.Везет || Текущая_Машина.Состояние == Машина.Enum_Состояние.Занята))
            {
                Текущая_Машина.Модуль_Вектора_Скорости = Случайное_дробное_число(0.5, 1);
            }
        }
        private static void Движение_до_конца_по_Y(Машина Текущая_Машина)
        {
            if ((Текущая_Машина.Координата_Y_Цели - Текущая_Машина.Координата_Y < 0.5) && (Текущая_Машина.Состояние == Машина.Enum_Состояние.Везет || Текущая_Машина.Состояние == Машина.Enum_Состояние.Занята))
            {
                Текущая_Машина.Модуль_Вектора_Скорости = Случайное_дробное_число(0.5, 1);
            }
        }
        static int Случайное_число(int inputNumber1, int inputNumber2)
        {
            Random rnd = new Random();
            return rnd.Next(inputNumber1, inputNumber2);
        }

        static double Случайное_дробное_число(double inputNumber1, double inputNumber2)
        {
            Random rnd = new Random();
            return rnd.NextDouble() * (inputNumber2 - inputNumber1);
        }
        static void formingOutParam(string tactNum)
        {
            XmlDocument doc = new XmlDocument();
            if (!File.Exists("ResourceParameters.xml"))
            {
                using (StreamWriter sw = File.CreateText("ResourceParameters.xml"))
                {
                    sw.WriteLine("<Ресурсы></Ресурсы>");
                    sw.Close();
                }
            }
            doc.Load("ResourceParameters.xml");
            XmlNode Пострадавший_1_Node = doc.CreateElement("Ресурс");
            doc.DocumentElement.AppendChild(Пострадавший_1_Node);
            XmlAttribute Пострадавший_1_atr = doc.CreateAttribute("Имя_ресурса");
            Пострадавший_1_atr.Value = "Пострадавший_1";
            Пострадавший_1_Node.Attributes.Append(Пострадавший_1_atr);
            XmlAttribute Пострадавший_1_atr2 = doc.CreateAttribute("Имя_типа_ресурса");
            Пострадавший_1_atr2.Value = "Пострадавший";
            Пострадавший_1_Node.Attributes.Append(Пострадавший_1_atr2);
            XmlAttribute Пострадавший_1_atr3 = doc.CreateAttribute("Трассировка");
            Пострадавший_1_atr3.Value = "Да";
            Пострадавший_1_Node.Attributes.Append(Пострадавший_1_atr3);
            XmlAttribute Пострадавший_1_atr4 = doc.CreateAttribute("Номер_такта");
            Пострадавший_1_atr4.Value = tactNum;
            Пострадавший_1_Node.Attributes.Append(Пострадавший_1_atr4);
            XmlNode Пострадавший_1_Приоритет_пострадавшего = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Пострадавший_1_Приоритет_пострадавшегоAtr = doc.CreateAttribute("Имя_параметра");
            Пострадавший_1_Приоритет_пострадавшегоAtr.Value = "Приоритет_пострадавшего";
            Пострадавший_1_Приоритет_пострадавшего.Attributes.Append(Пострадавший_1_Приоритет_пострадавшегоAtr);
            Пострадавший_1_Приоритет_пострадавшего.InnerText = Пострадавший_1.Приоритет_пострадавшего.ToString();
            Пострадавший_1_Node.AppendChild(Пострадавший_1_Приоритет_пострадавшего);
            XmlNode Пострадавший_1_Состояние = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Пострадавший_1_СостояниеAtr = doc.CreateAttribute("Имя_параметра");
            Пострадавший_1_СостояниеAtr.Value = "Состояние";
            Пострадавший_1_Состояние.Attributes.Append(Пострадавший_1_СостояниеAtr);
            Пострадавший_1_Состояние.InnerText = Пострадавший_1.Состояние.ToString();
            Пострадавший_1_Node.AppendChild(Пострадавший_1_Состояние);
            XmlNode Пострадавший_1_Степень_тяжести = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Пострадавший_1_Степень_тяжестиAtr = doc.CreateAttribute("Имя_параметра");
            Пострадавший_1_Степень_тяжестиAtr.Value = "Степень_тяжести";
            Пострадавший_1_Степень_тяжести.Attributes.Append(Пострадавший_1_Степень_тяжестиAtr);
            Пострадавший_1_Степень_тяжести.InnerText = Пострадавший_1.Степень_тяжести.ToString();
            Пострадавший_1_Node.AppendChild(Пострадавший_1_Степень_тяжести);
            XmlNode Пострадавший_1_Тип_травмы = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Пострадавший_1_Тип_травмыAtr = doc.CreateAttribute("Имя_параметра");
            Пострадавший_1_Тип_травмыAtr.Value = "Тип_травмы";
            Пострадавший_1_Тип_травмы.Attributes.Append(Пострадавший_1_Тип_травмыAtr);
            Пострадавший_1_Тип_травмы.InnerText = Пострадавший_1.Тип_травмы.ToString();
            Пострадавший_1_Node.AppendChild(Пострадавший_1_Тип_травмы);
            XmlNode Пострадавший_2_Node = doc.CreateElement("Ресурс");
            doc.DocumentElement.AppendChild(Пострадавший_2_Node);
            XmlAttribute Пострадавший_2_atr = doc.CreateAttribute("Имя_ресурса");
            Пострадавший_2_atr.Value = "Пострадавший_2";
            Пострадавший_2_Node.Attributes.Append(Пострадавший_2_atr);
            XmlAttribute Пострадавший_2_atr2 = doc.CreateAttribute("Имя_типа_ресурса");
            Пострадавший_2_atr2.Value = "Пострадавший";
            Пострадавший_2_Node.Attributes.Append(Пострадавший_2_atr2);
            XmlAttribute Пострадавший_2_atr3 = doc.CreateAttribute("Трассировка");
            Пострадавший_2_atr3.Value = "Да";
            Пострадавший_2_Node.Attributes.Append(Пострадавший_2_atr3);
            XmlAttribute Пострадавший_2_atr4 = doc.CreateAttribute("Номер_такта");
            Пострадавший_2_atr4.Value = tactNum;
            Пострадавший_2_Node.Attributes.Append(Пострадавший_2_atr4);
            XmlNode Пострадавший_2_Приоритет_пострадавшего = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Пострадавший_2_Приоритет_пострадавшегоAtr = doc.CreateAttribute("Имя_параметра");
            Пострадавший_2_Приоритет_пострадавшегоAtr.Value = "Приоритет_пострадавшего";
            Пострадавший_2_Приоритет_пострадавшего.Attributes.Append(Пострадавший_2_Приоритет_пострадавшегоAtr);
            Пострадавший_2_Приоритет_пострадавшего.InnerText = Пострадавший_2.Приоритет_пострадавшего.ToString();
            Пострадавший_2_Node.AppendChild(Пострадавший_2_Приоритет_пострадавшего);
            XmlNode Пострадавший_2_Состояние = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Пострадавший_2_СостояниеAtr = doc.CreateAttribute("Имя_параметра");
            Пострадавший_2_СостояниеAtr.Value = "Состояние";
            Пострадавший_2_Состояние.Attributes.Append(Пострадавший_2_СостояниеAtr);
            Пострадавший_2_Состояние.InnerText = Пострадавший_2.Состояние.ToString();
            Пострадавший_2_Node.AppendChild(Пострадавший_2_Состояние);
            XmlNode Пострадавший_2_Степень_тяжести = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Пострадавший_2_Степень_тяжестиAtr = doc.CreateAttribute("Имя_параметра");
            Пострадавший_2_Степень_тяжестиAtr.Value = "Степень_тяжести";
            Пострадавший_2_Степень_тяжести.Attributes.Append(Пострадавший_2_Степень_тяжестиAtr);
            Пострадавший_2_Степень_тяжести.InnerText = Пострадавший_2.Степень_тяжести.ToString();
            Пострадавший_2_Node.AppendChild(Пострадавший_2_Степень_тяжести);
            XmlNode Пострадавший_2_Тип_травмы = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Пострадавший_2_Тип_травмыAtr = doc.CreateAttribute("Имя_параметра");
            Пострадавший_2_Тип_травмыAtr.Value = "Тип_травмы";
            Пострадавший_2_Тип_травмы.Attributes.Append(Пострадавший_2_Тип_травмыAtr);
            Пострадавший_2_Тип_травмы.InnerText = Пострадавший_2.Тип_травмы.ToString();
            Пострадавший_2_Node.AppendChild(Пострадавший_2_Тип_травмы);
            XmlNode ДТП_1_Node = doc.CreateElement("Ресурс");
            doc.DocumentElement.AppendChild(ДТП_1_Node);
            XmlAttribute ДТП_1_atr = doc.CreateAttribute("Имя_ресурса");
            ДТП_1_atr.Value = "ДТП_1";
            ДТП_1_Node.Attributes.Append(ДТП_1_atr);
            XmlAttribute ДТП_1_atr2 = doc.CreateAttribute("Имя_типа_ресурса");
            ДТП_1_atr2.Value = "ДТП";
            ДТП_1_Node.Attributes.Append(ДТП_1_atr2);
            XmlAttribute ДТП_1_atr3 = doc.CreateAttribute("Трассировка");
            ДТП_1_atr3.Value = "Да";
            ДТП_1_Node.Attributes.Append(ДТП_1_atr3);
            XmlAttribute ДТП_1_atr4 = doc.CreateAttribute("Номер_такта");
            ДТП_1_atr4.Value = tactNum;
            ДТП_1_Node.Attributes.Append(ДТП_1_atr4);
            XmlNode ДТП_1_Координата_X = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Координата_XAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Координата_XAtr.Value = "Координата_X";
            ДТП_1_Координата_X.Attributes.Append(ДТП_1_Координата_XAtr);
            ДТП_1_Координата_X.InnerText = ДТП_1.Координата_X.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Координата_X);
            XmlNode ДТП_1_Координата_Y = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Координата_YAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Координата_YAtr.Value = "Координата_Y";
            ДТП_1_Координата_Y.Attributes.Append(ДТП_1_Координата_YAtr);
            ДТП_1_Координата_Y.InnerText = ДТП_1.Координата_Y.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Координата_Y);
            XmlNode ДТП_1_Легкий_ожоговый = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Легкий_ожоговыйAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Легкий_ожоговыйAtr.Value = "Легкий_ожоговый";
            ДТП_1_Легкий_ожоговый.Attributes.Append(ДТП_1_Легкий_ожоговыйAtr);
            ДТП_1_Легкий_ожоговый.InnerText = ДТП_1.Легкий_ожоговый.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Легкий_ожоговый);
            XmlNode ДТП_1_Легкий_нейрохирургия = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Легкий_нейрохирургияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Легкий_нейрохирургияAtr.Value = "Легкий_нейрохирургия";
            ДТП_1_Легкий_нейрохирургия.Attributes.Append(ДТП_1_Легкий_нейрохирургияAtr);
            ДТП_1_Легкий_нейрохирургия.InnerText = ДТП_1.Легкий_нейрохирургия.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Легкий_нейрохирургия);
            XmlNode ДТП_1_Легкий_хирургия = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Легкий_хирургияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Легкий_хирургияAtr.Value = "Легкий_хирургия";
            ДТП_1_Легкий_хирургия.Attributes.Append(ДТП_1_Легкий_хирургияAtr);
            ДТП_1_Легкий_хирургия.InnerText = ДТП_1.Легкий_хирургия.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Легкий_хирургия);
            XmlNode ДТП_1_Легкий_реанимация = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Легкий_реанимацияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Легкий_реанимацияAtr.Value = "Легкий_реанимация";
            ДТП_1_Легкий_реанимация.Attributes.Append(ДТП_1_Легкий_реанимацияAtr);
            ДТП_1_Легкий_реанимация.InnerText = ДТП_1.Легкий_реанимация.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Легкий_реанимация);
            XmlNode ДТП_1_Легкий = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_ЛегкийAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_ЛегкийAtr.Value = "Легкий";
            ДТП_1_Легкий.Attributes.Append(ДТП_1_ЛегкийAtr);
            ДТП_1_Легкий.InnerText = ДТП_1.Легкий.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Легкий);
            XmlNode ДТП_1_Средний_ожоговый = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Средний_ожоговыйAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Средний_ожоговыйAtr.Value = "Средний_ожоговый";
            ДТП_1_Средний_ожоговый.Attributes.Append(ДТП_1_Средний_ожоговыйAtr);
            ДТП_1_Средний_ожоговый.InnerText = ДТП_1.Средний_ожоговый.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Средний_ожоговый);
            XmlNode ДТП_1_Средний_нейрохирургия = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Средний_нейрохирургияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Средний_нейрохирургияAtr.Value = "Средний_нейрохирургия";
            ДТП_1_Средний_нейрохирургия.Attributes.Append(ДТП_1_Средний_нейрохирургияAtr);
            ДТП_1_Средний_нейрохирургия.InnerText = ДТП_1.Средний_нейрохирургия.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Средний_нейрохирургия);
            XmlNode ДТП_1_Средний_хирургия = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Средний_хирургияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Средний_хирургияAtr.Value = "Средний_хирургия";
            ДТП_1_Средний_хирургия.Attributes.Append(ДТП_1_Средний_хирургияAtr);
            ДТП_1_Средний_хирургия.InnerText = ДТП_1.Средний_хирургия.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Средний_хирургия);
            XmlNode ДТП_1_Средний_реанимация = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Средний_реанимацияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Средний_реанимацияAtr.Value = "Средний_реанимация";
            ДТП_1_Средний_реанимация.Attributes.Append(ДТП_1_Средний_реанимацияAtr);
            ДТП_1_Средний_реанимация.InnerText = ДТП_1.Средний_реанимация.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Средний_реанимация);
            XmlNode ДТП_1_Средний = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_СреднийAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_СреднийAtr.Value = "Средний";
            ДТП_1_Средний.Attributes.Append(ДТП_1_СреднийAtr);
            ДТП_1_Средний.InnerText = ДТП_1.Средний.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Средний);
            XmlNode ДТП_1_Тяжелый_ожоговый = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Тяжелый_ожоговыйAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Тяжелый_ожоговыйAtr.Value = "Тяжелый_ожоговый";
            ДТП_1_Тяжелый_ожоговый.Attributes.Append(ДТП_1_Тяжелый_ожоговыйAtr);
            ДТП_1_Тяжелый_ожоговый.InnerText = ДТП_1.Тяжелый_ожоговый.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Тяжелый_ожоговый);
            XmlNode ДТП_1_Тяжелый_нейрохирургия = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Тяжелый_нейрохирургияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Тяжелый_нейрохирургияAtr.Value = "Тяжелый_нейрохирургия";
            ДТП_1_Тяжелый_нейрохирургия.Attributes.Append(ДТП_1_Тяжелый_нейрохирургияAtr);
            ДТП_1_Тяжелый_нейрохирургия.InnerText = ДТП_1.Тяжелый_нейрохирургия.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Тяжелый_нейрохирургия);
            XmlNode ДТП_1_Тяжелый_хирургия = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Тяжелый_хирургияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Тяжелый_хирургияAtr.Value = "Тяжелый_хирургия";
            ДТП_1_Тяжелый_хирургия.Attributes.Append(ДТП_1_Тяжелый_хирургияAtr);
            ДТП_1_Тяжелый_хирургия.InnerText = ДТП_1.Тяжелый_хирургия.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Тяжелый_хирургия);
            XmlNode ДТП_1_Тяжелый_реанимация = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Тяжелый_реанимацияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Тяжелый_реанимацияAtr.Value = "Тяжелый_реанимация";
            ДТП_1_Тяжелый_реанимация.Attributes.Append(ДТП_1_Тяжелый_реанимацияAtr);
            ДТП_1_Тяжелый_реанимация.InnerText = ДТП_1.Тяжелый_реанимация.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Тяжелый_реанимация);
            XmlNode ДТП_1_Тяжелый = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_ТяжелыйAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_ТяжелыйAtr.Value = "Тяжелый";
            ДТП_1_Тяжелый.Attributes.Append(ДТП_1_ТяжелыйAtr);
            ДТП_1_Тяжелый.InnerText = ДТП_1.Тяжелый.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Тяжелый);
            XmlNode ДТП_1_Очень_тяжелый_ожоговый = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Очень_тяжелый_ожоговыйAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Очень_тяжелый_ожоговыйAtr.Value = "Очень_тяжелый_ожоговый";
            ДТП_1_Очень_тяжелый_ожоговый.Attributes.Append(ДТП_1_Очень_тяжелый_ожоговыйAtr);
            ДТП_1_Очень_тяжелый_ожоговый.InnerText = ДТП_1.Очень_тяжелый_ожоговый.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Очень_тяжелый_ожоговый);
            XmlNode ДТП_1_Очень_тяжелый_нейрохирургия = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Очень_тяжелый_нейрохирургияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Очень_тяжелый_нейрохирургияAtr.Value = "Очень_тяжелый_нейрохирургия";
            ДТП_1_Очень_тяжелый_нейрохирургия.Attributes.Append(ДТП_1_Очень_тяжелый_нейрохирургияAtr);
            ДТП_1_Очень_тяжелый_нейрохирургия.InnerText = ДТП_1.Очень_тяжелый_нейрохирургия.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Очень_тяжелый_нейрохирургия);
            XmlNode ДТП_1_Очень_тяжелый_хирургия = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Очень_тяжелый_хирургияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Очень_тяжелый_хирургияAtr.Value = "Очень_тяжелый_хирургия";
            ДТП_1_Очень_тяжелый_хирургия.Attributes.Append(ДТП_1_Очень_тяжелый_хирургияAtr);
            ДТП_1_Очень_тяжелый_хирургия.InnerText = ДТП_1.Очень_тяжелый_хирургия.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Очень_тяжелый_хирургия);
            XmlNode ДТП_1_Очень_тяжелый_реанимация = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Очень_тяжелый_реанимацияAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Очень_тяжелый_реанимацияAtr.Value = "Очень_тяжелый_реанимация";
            ДТП_1_Очень_тяжелый_реанимация.Attributes.Append(ДТП_1_Очень_тяжелый_реанимацияAtr);
            ДТП_1_Очень_тяжелый_реанимация.InnerText = ДТП_1.Очень_тяжелый_реанимация.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Очень_тяжелый_реанимация);
            XmlNode ДТП_1_Очень_тяжелый = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Очень_тяжелыйAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Очень_тяжелыйAtr.Value = "Очень_тяжелый";
            ДТП_1_Очень_тяжелый.Attributes.Append(ДТП_1_Очень_тяжелыйAtr);
            ДТП_1_Очень_тяжелый.InnerText = ДТП_1.Очень_тяжелый.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Очень_тяжелый);
            XmlNode ДТП_1_Степень_тяжести_следующего_пострадавшего = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Степень_тяжести_следующего_пострадавшегоAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Степень_тяжести_следующего_пострадавшегоAtr.Value = "Степень_тяжести_следующего_пострадавшего";
            ДТП_1_Степень_тяжести_следующего_пострадавшего.Attributes.Append(ДТП_1_Степень_тяжести_следующего_пострадавшегоAtr);
            ДТП_1_Степень_тяжести_следующего_пострадавшего.InnerText = ДТП_1.Степень_тяжести_следующего_пострадавшего.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Степень_тяжести_следующего_пострадавшего);
            XmlNode ДТП_1_Тип_травмы_следующего_пострадавшего = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Тип_травмы_следующего_пострадавшегоAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Тип_травмы_следующего_пострадавшегоAtr.Value = "Тип_травмы_следующего_пострадавшего";
            ДТП_1_Тип_травмы_следующего_пострадавшего.Attributes.Append(ДТП_1_Тип_травмы_следующего_пострадавшегоAtr);
            ДТП_1_Тип_травмы_следующего_пострадавшего.InnerText = ДТП_1.Тип_травмы_следующего_пострадавшего.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Тип_травмы_следующего_пострадавшего);
            XmlNode ДТП_1_Определить_пострадавшего = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ДТП_1_Определить_пострадавшегоAtr = doc.CreateAttribute("Имя_параметра");
            ДТП_1_Определить_пострадавшегоAtr.Value = "Определить_пострадавшего";
            ДТП_1_Определить_пострадавшего.Attributes.Append(ДТП_1_Определить_пострадавшегоAtr);
            ДТП_1_Определить_пострадавшего.InnerText = ДТП_1.Определить_пострадавшего.ToString();
            ДТП_1_Node.AppendChild(ДТП_1_Определить_пострадавшего);
            XmlNode Машина_1_Node = doc.CreateElement("Ресурс");
            doc.DocumentElement.AppendChild(Машина_1_Node);
            XmlAttribute Машина_1_atr = doc.CreateAttribute("Имя_ресурса");
            Машина_1_atr.Value = "Машина_1";
            Машина_1_Node.Attributes.Append(Машина_1_atr);
            XmlAttribute Машина_1_atr2 = doc.CreateAttribute("Имя_типа_ресурса");
            Машина_1_atr2.Value = "Машина";
            Машина_1_Node.Attributes.Append(Машина_1_atr2);
            XmlAttribute Машина_1_atr3 = doc.CreateAttribute("Трассировка");
            Машина_1_atr3.Value = "Да";
            Машина_1_Node.Attributes.Append(Машина_1_atr3);
            XmlAttribute Машина_1_atr4 = doc.CreateAttribute("Номер_такта");
            Машина_1_atr4.Value = tactNum;
            Машина_1_Node.Attributes.Append(Машина_1_atr4);
            XmlNode Машина_1_Тип_машины = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Тип_машиныAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Тип_машиныAtr.Value = "Тип_машины";
            Машина_1_Тип_машины.Attributes.Append(Машина_1_Тип_машиныAtr);
            Машина_1_Тип_машины.InnerText = Машина_1.Тип_машины.ToString();
            Машина_1_Node.AppendChild(Машина_1_Тип_машины);
            XmlNode Машина_1_Тип_бригады = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Тип_бригадыAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Тип_бригадыAtr.Value = "Тип_бригады";
            Машина_1_Тип_бригады.Attributes.Append(Машина_1_Тип_бригадыAtr);
            Машина_1_Тип_бригады.InnerText = Машина_1.Тип_бригады.ToString();
            Машина_1_Node.AppendChild(Машина_1_Тип_бригады);
            XmlNode Машина_1_Число_типа_машины = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Число_типа_машиныAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Число_типа_машиныAtr.Value = "Число_типа_машины";
            Машина_1_Число_типа_машины.Attributes.Append(Машина_1_Число_типа_машиныAtr);
            Машина_1_Число_типа_машины.InnerText = Машина_1.Число_типа_машины.ToString();
            Машина_1_Node.AppendChild(Машина_1_Число_типа_машины);
            XmlNode Машина_1_Число_типа_бригады = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Число_типа_бригадыAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Число_типа_бригадыAtr.Value = "Число_типа_бригады";
            Машина_1_Число_типа_бригады.Attributes.Append(Машина_1_Число_типа_бригадыAtr);
            Машина_1_Число_типа_бригады.InnerText = Машина_1.Число_типа_бригады.ToString();
            Машина_1_Node.AppendChild(Машина_1_Число_типа_бригады);
            XmlNode Машина_1_Координата_X = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Координата_XAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Координата_XAtr.Value = "Координата_X";
            Машина_1_Координата_X.Attributes.Append(Машина_1_Координата_XAtr);
            Машина_1_Координата_X.InnerText = Машина_1.Координата_X.ToString();
            Машина_1_Node.AppendChild(Машина_1_Координата_X);
            XmlNode Машина_1_Координата_Y = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Координата_YAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Координата_YAtr.Value = "Координата_Y";
            Машина_1_Координата_Y.Attributes.Append(Машина_1_Координата_YAtr);
            Машина_1_Координата_Y.InnerText = Машина_1.Координата_Y.ToString();
            Машина_1_Node.AppendChild(Машина_1_Координата_Y);
            XmlNode Машина_1_Состояние = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_СостояниеAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_СостояниеAtr.Value = "Состояние";
            Машина_1_Состояние.Attributes.Append(Машина_1_СостояниеAtr);
            Машина_1_Состояние.InnerText = Машина_1.Состояние.ToString();
            Машина_1_Node.AppendChild(Машина_1_Состояние);
            XmlNode Машина_1_Степень_тяжести_пострадавшего = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Степень_тяжести_пострадавшегоAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Степень_тяжести_пострадавшегоAtr.Value = "Степень_тяжести_пострадавшего";
            Машина_1_Степень_тяжести_пострадавшего.Attributes.Append(Машина_1_Степень_тяжести_пострадавшегоAtr);
            Машина_1_Степень_тяжести_пострадавшего.InnerText = Машина_1.Степень_тяжести_пострадавшего.ToString();
            Машина_1_Node.AppendChild(Машина_1_Степень_тяжести_пострадавшего);
            XmlNode Машина_1_Тип_травмы = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Тип_травмыAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Тип_травмыAtr.Value = "Тип_травмы";
            Машина_1_Тип_травмы.Attributes.Append(Машина_1_Тип_травмыAtr);
            Машина_1_Тип_травмы.InnerText = Машина_1.Тип_травмы.ToString();
            Машина_1_Node.AppendChild(Машина_1_Тип_травмы);
            XmlNode Машина_1_Координата_X_Цели = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Координата_X_ЦелиAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Координата_X_ЦелиAtr.Value = "Координата_X_Цели";
            Машина_1_Координата_X_Цели.Attributes.Append(Машина_1_Координата_X_ЦелиAtr);
            Машина_1_Координата_X_Цели.InnerText = Машина_1.Координата_X_Цели.ToString();
            Машина_1_Node.AppendChild(Машина_1_Координата_X_Цели);
            XmlNode Машина_1_Координата_Y_Цели = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Координата_Y_ЦелиAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Координата_Y_ЦелиAtr.Value = "Координата_Y_Цели";
            Машина_1_Координата_Y_Цели.Attributes.Append(Машина_1_Координата_Y_ЦелиAtr);
            Машина_1_Координата_Y_Цели.InnerText = Машина_1.Координата_Y_Цели.ToString();
            Машина_1_Node.AppendChild(Машина_1_Координата_Y_Цели);
            XmlNode Машина_1_Время = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_ВремяAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_ВремяAtr.Value = "Время";
            Машина_1_Время.Attributes.Append(Машина_1_ВремяAtr);
            Машина_1_Время.InnerText = Машина_1.Время.ToString();
            Машина_1_Node.AppendChild(Машина_1_Время);
            XmlNode Машина_1_Координата_X_Вектора_Скорости = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Координата_X_Вектора_СкоростиAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Координата_X_Вектора_СкоростиAtr.Value = "Координата_X_Вектора_Скорости";
            Машина_1_Координата_X_Вектора_Скорости.Attributes.Append(Машина_1_Координата_X_Вектора_СкоростиAtr);
            Машина_1_Координата_X_Вектора_Скорости.InnerText = Машина_1.Координата_X_Вектора_Скорости.ToString();
            Машина_1_Node.AppendChild(Машина_1_Координата_X_Вектора_Скорости);
            XmlNode Машина_1_Координата_Y_Вектора_Скорости = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Координата_Y_Вектора_СкоростиAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Координата_Y_Вектора_СкоростиAtr.Value = "Координата_Y_Вектора_Скорости";
            Машина_1_Координата_Y_Вектора_Скорости.Attributes.Append(Машина_1_Координата_Y_Вектора_СкоростиAtr);
            Машина_1_Координата_Y_Вектора_Скорости.InnerText = Машина_1.Координата_Y_Вектора_Скорости.ToString();
            Машина_1_Node.AppendChild(Машина_1_Координата_Y_Вектора_Скорости);
            XmlNode Машина_1_Модуль_Вектора_Скорости = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_1_Модуль_Вектора_СкоростиAtr = doc.CreateAttribute("Имя_параметра");
            Машина_1_Модуль_Вектора_СкоростиAtr.Value = "Модуль_Вектора_Скорости";
            Машина_1_Модуль_Вектора_Скорости.Attributes.Append(Машина_1_Модуль_Вектора_СкоростиAtr);
            Машина_1_Модуль_Вектора_Скорости.InnerText = Машина_1.Модуль_Вектора_Скорости.ToString();
            Машина_1_Node.AppendChild(Машина_1_Модуль_Вектора_Скорости);
            XmlNode Машина_2_Node = doc.CreateElement("Ресурс");
            doc.DocumentElement.AppendChild(Машина_2_Node);
            XmlAttribute Машина_2_atr = doc.CreateAttribute("Имя_ресурса");
            Машина_2_atr.Value = "Машина_2";
            Машина_2_Node.Attributes.Append(Машина_2_atr);
            XmlAttribute Машина_2_atr2 = doc.CreateAttribute("Имя_типа_ресурса");
            Машина_2_atr2.Value = "Машина";
            Машина_2_Node.Attributes.Append(Машина_2_atr2);
            XmlAttribute Машина_2_atr3 = doc.CreateAttribute("Трассировка");
            Машина_2_atr3.Value = "Да";
            Машина_2_Node.Attributes.Append(Машина_2_atr3);
            XmlAttribute Машина_2_atr4 = doc.CreateAttribute("Номер_такта");
            Машина_2_atr4.Value = tactNum;
            Машина_2_Node.Attributes.Append(Машина_2_atr4);
            XmlNode Машина_2_Тип_машины = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Тип_машиныAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Тип_машиныAtr.Value = "Тип_машины";
            Машина_2_Тип_машины.Attributes.Append(Машина_2_Тип_машиныAtr);
            Машина_2_Тип_машины.InnerText = Машина_2.Тип_машины.ToString();
            Машина_2_Node.AppendChild(Машина_2_Тип_машины);
            XmlNode Машина_2_Тип_бригады = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Тип_бригадыAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Тип_бригадыAtr.Value = "Тип_бригады";
            Машина_2_Тип_бригады.Attributes.Append(Машина_2_Тип_бригадыAtr);
            Машина_2_Тип_бригады.InnerText = Машина_2.Тип_бригады.ToString();
            Машина_2_Node.AppendChild(Машина_2_Тип_бригады);
            XmlNode Машина_2_Число_типа_машины = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Число_типа_машиныAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Число_типа_машиныAtr.Value = "Число_типа_машины";
            Машина_2_Число_типа_машины.Attributes.Append(Машина_2_Число_типа_машиныAtr);
            Машина_2_Число_типа_машины.InnerText = Машина_2.Число_типа_машины.ToString();
            Машина_2_Node.AppendChild(Машина_2_Число_типа_машины);
            XmlNode Машина_2_Число_типа_бригады = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Число_типа_бригадыAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Число_типа_бригадыAtr.Value = "Число_типа_бригады";
            Машина_2_Число_типа_бригады.Attributes.Append(Машина_2_Число_типа_бригадыAtr);
            Машина_2_Число_типа_бригады.InnerText = Машина_2.Число_типа_бригады.ToString();
            Машина_2_Node.AppendChild(Машина_2_Число_типа_бригады);
            XmlNode Машина_2_Координата_X = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Координата_XAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Координата_XAtr.Value = "Координата_X";
            Машина_2_Координата_X.Attributes.Append(Машина_2_Координата_XAtr);
            Машина_2_Координата_X.InnerText = Машина_2.Координата_X.ToString();
            Машина_2_Node.AppendChild(Машина_2_Координата_X);
            XmlNode Машина_2_Координата_Y = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Координата_YAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Координата_YAtr.Value = "Координата_Y";
            Машина_2_Координата_Y.Attributes.Append(Машина_2_Координата_YAtr);
            Машина_2_Координата_Y.InnerText = Машина_2.Координата_Y.ToString();
            Машина_2_Node.AppendChild(Машина_2_Координата_Y);
            XmlNode Машина_2_Состояние = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_СостояниеAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_СостояниеAtr.Value = "Состояние";
            Машина_2_Состояние.Attributes.Append(Машина_2_СостояниеAtr);
            Машина_2_Состояние.InnerText = Машина_2.Состояние.ToString();
            Машина_2_Node.AppendChild(Машина_2_Состояние);
            XmlNode Машина_2_Степень_тяжести_пострадавшего = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Степень_тяжести_пострадавшегоAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Степень_тяжести_пострадавшегоAtr.Value = "Степень_тяжести_пострадавшего";
            Машина_2_Степень_тяжести_пострадавшего.Attributes.Append(Машина_2_Степень_тяжести_пострадавшегоAtr);
            Машина_2_Степень_тяжести_пострадавшего.InnerText = Машина_2.Степень_тяжести_пострадавшего.ToString();
            Машина_2_Node.AppendChild(Машина_2_Степень_тяжести_пострадавшего);
            XmlNode Машина_2_Тип_травмы = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Тип_травмыAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Тип_травмыAtr.Value = "Тип_травмы";
            Машина_2_Тип_травмы.Attributes.Append(Машина_2_Тип_травмыAtr);
            Машина_2_Тип_травмы.InnerText = Машина_2.Тип_травмы.ToString();
            Машина_2_Node.AppendChild(Машина_2_Тип_травмы);
            XmlNode Машина_2_Координата_X_Цели = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Координата_X_ЦелиAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Координата_X_ЦелиAtr.Value = "Координата_X_Цели";
            Машина_2_Координата_X_Цели.Attributes.Append(Машина_2_Координата_X_ЦелиAtr);
            Машина_2_Координата_X_Цели.InnerText = Машина_2.Координата_X_Цели.ToString();
            Машина_2_Node.AppendChild(Машина_2_Координата_X_Цели);
            XmlNode Машина_2_Координата_Y_Цели = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Координата_Y_ЦелиAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Координата_Y_ЦелиAtr.Value = "Координата_Y_Цели";
            Машина_2_Координата_Y_Цели.Attributes.Append(Машина_2_Координата_Y_ЦелиAtr);
            Машина_2_Координата_Y_Цели.InnerText = Машина_2.Координата_Y_Цели.ToString();
            Машина_2_Node.AppendChild(Машина_2_Координата_Y_Цели);
            XmlNode Машина_2_Время = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_ВремяAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_ВремяAtr.Value = "Время";
            Машина_2_Время.Attributes.Append(Машина_2_ВремяAtr);
            Машина_2_Время.InnerText = Машина_2.Время.ToString();
            Машина_2_Node.AppendChild(Машина_2_Время);
            XmlNode Машина_2_Координата_X_Вектора_Скорости = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Координата_X_Вектора_СкоростиAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Координата_X_Вектора_СкоростиAtr.Value = "Координата_X_Вектора_Скорости";
            Машина_2_Координата_X_Вектора_Скорости.Attributes.Append(Машина_2_Координата_X_Вектора_СкоростиAtr);
            Машина_2_Координата_X_Вектора_Скорости.InnerText = Машина_2.Координата_X_Вектора_Скорости.ToString();
            Машина_2_Node.AppendChild(Машина_2_Координата_X_Вектора_Скорости);
            XmlNode Машина_2_Координата_Y_Вектора_Скорости = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Координата_Y_Вектора_СкоростиAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Координата_Y_Вектора_СкоростиAtr.Value = "Координата_Y_Вектора_Скорости";
            Машина_2_Координата_Y_Вектора_Скорости.Attributes.Append(Машина_2_Координата_Y_Вектора_СкоростиAtr);
            Машина_2_Координата_Y_Вектора_Скорости.InnerText = Машина_2.Координата_Y_Вектора_Скорости.ToString();
            Машина_2_Node.AppendChild(Машина_2_Координата_Y_Вектора_Скорости);
            XmlNode Машина_2_Модуль_Вектора_Скорости = doc.CreateElement("Параметр_ресурса");
            XmlAttribute Машина_2_Модуль_Вектора_СкоростиAtr = doc.CreateAttribute("Имя_параметра");
            Машина_2_Модуль_Вектора_СкоростиAtr.Value = "Модуль_Вектора_Скорости";
            Машина_2_Модуль_Вектора_Скорости.Attributes.Append(Машина_2_Модуль_Вектора_СкоростиAtr);
            Машина_2_Модуль_Вектора_Скорости.InnerText = Машина_2.Модуль_Вектора_Скорости.ToString();
            Машина_2_Node.AppendChild(Машина_2_Модуль_Вектора_Скорости);
            XmlNode ЛПУ_1_Node = doc.CreateElement("Ресурс");
            doc.DocumentElement.AppendChild(ЛПУ_1_Node);
            XmlAttribute ЛПУ_1_atr = doc.CreateAttribute("Имя_ресурса");
            ЛПУ_1_atr.Value = "ЛПУ_1";
            ЛПУ_1_Node.Attributes.Append(ЛПУ_1_atr);
            XmlAttribute ЛПУ_1_atr2 = doc.CreateAttribute("Имя_типа_ресурса");
            ЛПУ_1_atr2.Value = "ЛПУ";
            ЛПУ_1_Node.Attributes.Append(ЛПУ_1_atr2);
            XmlAttribute ЛПУ_1_atr3 = doc.CreateAttribute("Трассировка");
            ЛПУ_1_atr3.Value = "Да";
            ЛПУ_1_Node.Attributes.Append(ЛПУ_1_atr3);
            XmlAttribute ЛПУ_1_atr4 = doc.CreateAttribute("Номер_такта");
            ЛПУ_1_atr4.Value = tactNum;
            ЛПУ_1_Node.Attributes.Append(ЛПУ_1_atr4);
            XmlNode ЛПУ_1_Координата_X = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_1_Координата_XAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_1_Координата_XAtr.Value = "Координата_X";
            ЛПУ_1_Координата_X.Attributes.Append(ЛПУ_1_Координата_XAtr);
            ЛПУ_1_Координата_X.InnerText = ЛПУ_1.Координата_X.ToString();
            ЛПУ_1_Node.AppendChild(ЛПУ_1_Координата_X);
            XmlNode ЛПУ_1_Координата_Y = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_1_Координата_YAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_1_Координата_YAtr.Value = "Координата_Y";
            ЛПУ_1_Координата_Y.Attributes.Append(ЛПУ_1_Координата_YAtr);
            ЛПУ_1_Координата_Y.InnerText = ЛПУ_1.Координата_Y.ToString();
            ЛПУ_1_Node.AppendChild(ЛПУ_1_Координата_Y);
            XmlNode ЛПУ_1_Количество_мест_в_нейрохирургии = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_1_Количество_мест_в_нейрохирургииAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_1_Количество_мест_в_нейрохирургииAtr.Value = "Количество_мест_в_нейрохирургии";
            ЛПУ_1_Количество_мест_в_нейрохирургии.Attributes.Append(ЛПУ_1_Количество_мест_в_нейрохирургииAtr);
            ЛПУ_1_Количество_мест_в_нейрохирургии.InnerText = ЛПУ_1.Количество_мест_в_нейрохирургии.ToString();
            ЛПУ_1_Node.AppendChild(ЛПУ_1_Количество_мест_в_нейрохирургии);
            XmlNode ЛПУ_1_Количество_мест_в_хирургии = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_1_Количество_мест_в_хирургииAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_1_Количество_мест_в_хирургииAtr.Value = "Количество_мест_в_хирургии";
            ЛПУ_1_Количество_мест_в_хирургии.Attributes.Append(ЛПУ_1_Количество_мест_в_хирургииAtr);
            ЛПУ_1_Количество_мест_в_хирургии.InnerText = ЛПУ_1.Количество_мест_в_хирургии.ToString();
            ЛПУ_1_Node.AppendChild(ЛПУ_1_Количество_мест_в_хирургии);
            XmlNode ЛПУ_1_Количество_мест_в_реанимации = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_1_Количество_мест_в_реанимацииAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_1_Количество_мест_в_реанимацииAtr.Value = "Количество_мест_в_реанимации";
            ЛПУ_1_Количество_мест_в_реанимации.Attributes.Append(ЛПУ_1_Количество_мест_в_реанимацииAtr);
            ЛПУ_1_Количество_мест_в_реанимации.InnerText = ЛПУ_1.Количество_мест_в_реанимации.ToString();
            ЛПУ_1_Node.AppendChild(ЛПУ_1_Количество_мест_в_реанимации);
            XmlNode ЛПУ_1_Количество_мест_в_ожоговом = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_1_Количество_мест_в_ожоговомAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_1_Количество_мест_в_ожоговомAtr.Value = "Количество_мест_в_ожоговом";
            ЛПУ_1_Количество_мест_в_ожоговом.Attributes.Append(ЛПУ_1_Количество_мест_в_ожоговомAtr);
            ЛПУ_1_Количество_мест_в_ожоговом.InnerText = ЛПУ_1.Количество_мест_в_ожоговом.ToString();
            ЛПУ_1_Node.AppendChild(ЛПУ_1_Количество_мест_в_ожоговом);
            XmlNode ЛПУ_2_Node = doc.CreateElement("Ресурс");
            doc.DocumentElement.AppendChild(ЛПУ_2_Node);
            XmlAttribute ЛПУ_2_atr = doc.CreateAttribute("Имя_ресурса");
            ЛПУ_2_atr.Value = "ЛПУ_2";
            ЛПУ_2_Node.Attributes.Append(ЛПУ_2_atr);
            XmlAttribute ЛПУ_2_atr2 = doc.CreateAttribute("Имя_типа_ресурса");
            ЛПУ_2_atr2.Value = "ЛПУ";
            ЛПУ_2_Node.Attributes.Append(ЛПУ_2_atr2);
            XmlAttribute ЛПУ_2_atr3 = doc.CreateAttribute("Трассировка");
            ЛПУ_2_atr3.Value = "Да";
            ЛПУ_2_Node.Attributes.Append(ЛПУ_2_atr3);
            XmlAttribute ЛПУ_2_atr4 = doc.CreateAttribute("Номер_такта");
            ЛПУ_2_atr4.Value = tactNum;
            ЛПУ_2_Node.Attributes.Append(ЛПУ_2_atr4);
            XmlNode ЛПУ_2_Координата_X = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_2_Координата_XAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_2_Координата_XAtr.Value = "Координата_X";
            ЛПУ_2_Координата_X.Attributes.Append(ЛПУ_2_Координата_XAtr);
            ЛПУ_2_Координата_X.InnerText = ЛПУ_2.Координата_X.ToString();
            ЛПУ_2_Node.AppendChild(ЛПУ_2_Координата_X);
            XmlNode ЛПУ_2_Координата_Y = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_2_Координата_YAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_2_Координата_YAtr.Value = "Координата_Y";
            ЛПУ_2_Координата_Y.Attributes.Append(ЛПУ_2_Координата_YAtr);
            ЛПУ_2_Координата_Y.InnerText = ЛПУ_2.Координата_Y.ToString();
            ЛПУ_2_Node.AppendChild(ЛПУ_2_Координата_Y);
            XmlNode ЛПУ_2_Количество_мест_в_нейрохирургии = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_2_Количество_мест_в_нейрохирургииAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_2_Количество_мест_в_нейрохирургииAtr.Value = "Количество_мест_в_нейрохирургии";
            ЛПУ_2_Количество_мест_в_нейрохирургии.Attributes.Append(ЛПУ_2_Количество_мест_в_нейрохирургииAtr);
            ЛПУ_2_Количество_мест_в_нейрохирургии.InnerText = ЛПУ_2.Количество_мест_в_нейрохирургии.ToString();
            ЛПУ_2_Node.AppendChild(ЛПУ_2_Количество_мест_в_нейрохирургии);
            XmlNode ЛПУ_2_Количество_мест_в_хирургии = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_2_Количество_мест_в_хирургииAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_2_Количество_мест_в_хирургииAtr.Value = "Количество_мест_в_хирургии";
            ЛПУ_2_Количество_мест_в_хирургии.Attributes.Append(ЛПУ_2_Количество_мест_в_хирургииAtr);
            ЛПУ_2_Количество_мест_в_хирургии.InnerText = ЛПУ_2.Количество_мест_в_хирургии.ToString();
            ЛПУ_2_Node.AppendChild(ЛПУ_2_Количество_мест_в_хирургии);
            XmlNode ЛПУ_2_Количество_мест_в_реанимации = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_2_Количество_мест_в_реанимацииAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_2_Количество_мест_в_реанимацииAtr.Value = "Количество_мест_в_реанимации";
            ЛПУ_2_Количество_мест_в_реанимации.Attributes.Append(ЛПУ_2_Количество_мест_в_реанимацииAtr);
            ЛПУ_2_Количество_мест_в_реанимации.InnerText = ЛПУ_2.Количество_мест_в_реанимации.ToString();
            ЛПУ_2_Node.AppendChild(ЛПУ_2_Количество_мест_в_реанимации);
            XmlNode ЛПУ_2_Количество_мест_в_ожоговом = doc.CreateElement("Параметр_ресурса");
            XmlAttribute ЛПУ_2_Количество_мест_в_ожоговомAtr = doc.CreateAttribute("Имя_параметра");
            ЛПУ_2_Количество_мест_в_ожоговомAtr.Value = "Количество_мест_в_ожоговом";
            ЛПУ_2_Количество_мест_в_ожоговом.Attributes.Append(ЛПУ_2_Количество_мест_в_ожоговомAtr);
            ЛПУ_2_Количество_мест_в_ожоговом.InnerText = ЛПУ_2.Количество_мест_в_ожоговом.ToString();
            ЛПУ_2_Node.AppendChild(ЛПУ_2_Количество_мест_в_ожоговом);

            formBB(tactNum, doc);
            doc.Save("ResourceParameters.xml");
        }

        static void formBB(string tactNum, XmlDocument doc)
        {
            XmlDocument bb = new XmlDocument();
            if (!File.Exists("bb2.xml"))
            {
                using (StreamWriter sw = File.CreateText("bb2.xml"))
                {
                    sw.WriteLine("<bb><wm><facts></facts></wm></bb>");
                    sw.Close();
                }
            }
            bb.Load("bb2.xml");
            XmlNode factlist = bb.SelectSingleNode("//facts");
            factlist.RemoveAll();

            XmlNodeList recourceList = doc.SelectNodes("//Ресурс[@Номер_такта=" + tactNum + "]");
            for (int i = 0; i < recourceList.Count; i++)
            {
                XmlNode resource = recourceList[i];
                string objectName = resource.Attributes["Имя_ресурса"].Value;
                for (int j = 0; j < resource.ChildNodes.Count; j++)
                {
                    XmlNode resourceParam = resource.ChildNodes[j];
                    XmlNode fact = bb.CreateElement("fact");

                    XmlAttribute attr = bb.CreateAttribute("AttrPath");
                    attr.Value = objectName + "." + resourceParam.Attributes["Имя_параметра"].Value;
                    fact.Attributes.Append(attr);

                    XmlAttribute value = bb.CreateAttribute("Value");
                    value.Value = resourceParam.InnerText;
                    fact.Attributes.Append(value);

                    XmlAttribute belief = bb.CreateAttribute("Belief");
                    belief.Value = "50";
                    fact.Attributes.Append(belief);

                    XmlAttribute maxBelief = bb.CreateAttribute("MaxBelief");
                    maxBelief.Value = "100";
                    fact.Attributes.Append(maxBelief);

                    XmlAttribute accuracy = bb.CreateAttribute("Accuracy");
                    accuracy.Value = "0";
                    fact.Attributes.Append(accuracy);

                    XmlAttribute fromModel = bb.CreateAttribute("FromModel");
                    fromModel.Value = "TRUE";
                    fact.Attributes.Append(fromModel);

                    XmlAttribute tactNumAttr = bb.CreateAttribute("TactNum");
                    tactNumAttr.Value = tactNum;
                    fact.Attributes.Append(tactNumAttr);

                    factlist.AppendChild(fact);
                }
            }
            bb.Save("bb2.xml");
        }
    }
    class Машина
    {
        public enum Enum_Тип_машины
        {
            A,
            B,
            C
        };
        public Enum_Тип_машины Тип_машины
        {
            get;
            set;
        }
        public enum Enum_Тип_бригады
        {
            A,
            B,
            C
        };
        public Enum_Тип_бригады Тип_бригады
        {
            get;
            set;
        }
        public int Число_типа_машины
        {
            get;
            set;
        }
        public int Число_типа_бригады
        {
            get;
            set;
        }
        public double Координата_X
        {
            get;
            set;
        }
        public double Координата_Y
        {
            get;
            set;
        }
        public enum Enum_Состояние
        {
            Свободна,
            Прибыла,
            Занята,
            Везет,
            В_ЛПУ
        };
        public Enum_Состояние Состояние
        {
            get;
            set;
        }
        public enum Enum_Степень_тяжести_пострадавшего
        {
            Легкая,
            Средняя,
            Тяжелая,
            Очень_тяжелая
        };
        public Enum_Степень_тяжести_пострадавшего Степень_тяжести_пострадавшего
        {
            get;
            set;
        }
        public enum Enum_Тип_травмы
        {
            Нейрохирургия,
            Хирургия,
            Ожоговое,
            Реанимация
        };
        public Enum_Тип_травмы Тип_травмы
        {
            get;
            set;
        }
        public double Координата_X_Цели
        {
            get;
            set;
        }
        public double Координата_Y_Цели
        {
            get;
            set;
        }
        public double Время
        {
            get;
            set;
        }
        public double Координата_X_Вектора_Скорости
        {
            get;
            set;
        }
        public double Координата_Y_Вектора_Скорости
        {
            get;
            set;
        }
        public double Модуль_Вектора_Скорости
        {
            get;
            set;
        }
    }
    class ЛПУ
    {
        public double Координата_X
        {
            get;
            set;
        }
        public double Координата_Y
        {
            get;
            set;
        }
        public int Количество_мест_в_нейрохирургии
        {
            get;
            set;
        }
        public int Количество_мест_в_хирургии
        {
            get;
            set;
        }
        public int Количество_мест_в_реанимации
        {
            get;
            set;
        }
        public int Количество_мест_в_ожоговом
        {
            get;
            set;
        }
    }
    class ДТП
    {
        public double Координата_X
        {
            get;
            set;
        }
        public double Координата_Y
        {
            get;
            set;
        }
        public int Легкий_ожоговый
        {
            get;
            set;
        }
        public int Легкий_нейрохирургия
        {
            get;
            set;
        }
        public int Легкий_хирургия
        {
            get;
            set;
        }
        public int Легкий_реанимация
        {
            get;
            set;
        }
        public int Легкий
        {
            get;
            set;
        }
        public int Средний_ожоговый
        {
            get;
            set;
        }
        public int Средний_нейрохирургия
        {
            get;
            set;
        }
        public int Средний_хирургия
        {
            get;
            set;
        }
        public int Средний_реанимация
        {
            get;
            set;
        }
        public int Средний
        {
            get;
            set;
        }
        public int Тяжелый_ожоговый
        {
            get;
            set;
        }
        public int Тяжелый_нейрохирургия
        {
            get;
            set;
        }
        public int Тяжелый_хирургия
        {
            get;
            set;
        }
        public int Тяжелый_реанимация
        {
            get;
            set;
        }
        public int Тяжелый
        {
            get;
            set;
        }
        public int Очень_тяжелый_ожоговый
        {
            get;
            set;
        }
        public int Очень_тяжелый_нейрохирургия
        {
            get;
            set;
        }
        public int Очень_тяжелый_хирургия
        {
            get;
            set;
        }
        public int Очень_тяжелый_реанимация
        {
            get;
            set;
        }
        public int Очень_тяжелый
        {
            get;
            set;
        }
        public enum Enum_Степень_тяжести_следующего_пострадавшего
        {
            Легкая,
            Средняя,
            Тяжелая,
            Очень_тяжелая
        };
        public Enum_Степень_тяжести_следующего_пострадавшего Степень_тяжести_следующего_пострадавшего
        {
            get;
            set;
        }
        public enum Enum_Тип_травмы_следующего_пострадавшего
        {
            Ожоговая,
            Реанимация,
            Хирургия,
            Нейрохирургия
        };
        public Enum_Тип_травмы_следующего_пострадавшего Тип_травмы_следующего_пострадавшего
        {
            get;
            set;
        }
        public int Определить_пострадавшего
        {
            get;
            set;
        }
    }
    class Пострадавший
    {
        public int Приоритет_пострадавшего
        {
            get;
            set;
        }
        public int Состояние
        {
            get;
            set;
        }
        public enum Enum_Степень_тяжести
        {
            Легкая,
            Средняя,
            Тяжелая,
            Очень_тяжелая
        };
        public Enum_Степень_тяжести Степень_тяжести
        {
            get;
            set;
        }
        public enum Enum_Тип_травмы
        {
            Ожоговая,
            Реанимация,
            Хирургия,
            Нейрохирургия
        };
        public Enum_Тип_травмы Тип_травмы
        {
            get;
            set;
        }
    }
}